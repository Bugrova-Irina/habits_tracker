services:
  db:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_DB: ${NAME}
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data/
    ports:
      - "${PORT}:5432"
    healthcheck:
      test: pg_isready -U ${USER} -d ${NAME}
      interval: 3s
      timeout: 3s
      retries: 10
    networks:
      - app-network

  redis:
    image: redis:6.2.4-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 1s
      retries: 10
    networks:
      - app-network

  backend:
    build: .
    command: >
      bash -c "
      echo 'Waiting for database...' &&
      sleep 10 &&
      python manage.py migrate &&
      python manage.py collectstatic -c --no-input &&
      python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    environment:
      HOST: db
      REDIS_URL: redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8000"
    volumes:
      - django_static:/coursework_drf/static/
    networks:
      - app-network

  web:
    image: nginx:1.19.3
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/
    networks:
      - app-network

  celery:
    build: .
    command: >
      bash -c "
      echo 'Waiting for Redis...' &&
      sleep 15 &&
      celery -A config worker -l INFO -P eventlet"
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - HOST=db
    volumes:
      - .:/coursework_drf
    depends_on:
      - redis
      - db
    networks:
      - app-network

  beat:
    build: .
    command: >
      bash -c "
      echo 'Waiting for Redis...' &&
      sleep 15 &&
      celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - HOST=db
    volumes:
      - .:/coursework_drf
    depends_on:
      - redis
      - db
    networks:
      - app-network

volumes:
  pg_data:
  django_static:
  redis-data:

networks:
  app-network:
    driver: bridge
